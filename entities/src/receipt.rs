//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};
use utoipa::ToSchema;

#[derive(Clone, Debug, PartialEq, Eq, DeriveEntityModel, Serialize, Deserialize, ToSchema)]
#[sea_orm(schema_name = "finance", table_name = "receipt")]
#[serde(rename_all = "camelCase")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub start_date: Option<chrono::DateTime<chrono::FixedOffset>>,
    pub stop_date: Option<chrono::DateTime<chrono::FixedOffset>>,
    pub sallary: Option<Decimal>,
    pub parent_id:Option<Uuid>,
    pub user_id: Uuid,
    pub name: Option<String>,
    pub position: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

#[derive(Clone, Debug, PartialEq, Eq, Serialize, Deserialize, DeriveIntoActiveModel, ToSchema)]
#[serde(rename_all = "camelCase")]
pub struct CreateReceipt {
    pub start_date: Option<chrono::DateTime<chrono::FixedOffset>>,
    pub stop_date: Option<chrono::DateTime<chrono::FixedOffset>>,
    pub sallary: Decimal,
    pub parent_id: Option<Uuid>,
}

#[derive(Clone, Debug, PartialEq, Eq, Serialize, Deserialize, DeriveIntoActiveModel, ToSchema)]
#[serde(rename_all = "camelCase")]
pub struct UpdateReceipt {
    pub start_date: Option<chrono::DateTime<chrono::FixedOffset>>,
    pub stop_date: Option<chrono::DateTime<chrono::FixedOffset>>,
    pub sallary: Option<Decimal>,
    pub name: Option<String>,
    pub position: Option<String>
    // pub parent: OOption<Uuid>,
}

impl ActiveModelBehavior for ActiveModel {}
